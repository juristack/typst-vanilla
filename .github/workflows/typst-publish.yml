name: Publish to Typst Packages

on:
  push:
    tags:
      - 'v*'  # Trigger on tags that start with 'v' (e.g., v0.1.0)

env:
  # the repository to which to push the release version
  # usually a fork of typst/packages (https://github.com/typst/packages/)
  # that you have push privileges to
  REGISTRY_REPO: juristack/typst-packages
  # the path within that repo where the "<name>/<version>" directory should be put
  # for the Typst package registry, keep this as is
  PATH_PREFIX: packages/preview

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning

      - name: Extract version from tag
        id: get_version
        run: |
          PKG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$PKG_VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $PKG_VERSION"
          
          # Create a package name variable for reuse
          PKG_NAME="vanilla"
          echo "package_name=$PKG_NAME" >> $GITHUB_OUTPUT
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl make grep

      - name: Install just command runner
        uses: extractions/setup-just@v1

      - name: Setup typst
        uses: typst-community/setup-typst@v3
        with:
          typst-version: latest

      - name: Package the library
        run: |
          mkdir -p target
          just package target
          echo "Package files prepared in target directory"
          ls -la target

      - name: Validate package
        run: |
          # Ensure typst.toml has matching version
          TOML_VERSION=$(grep 'version' typst.toml | sed -E 's/version[[:space:]]*=[[:space:]]*"([^"]+)".*/\1/')
          if [ "$TOML_VERSION" != "${{ steps.get_version.outputs.version }}" ]; then
            echo "::error::Version in typst.toml ($TOML_VERSION) does not match tag version (${{ steps.get_version.outputs.version }})"
            exit 1
          fi
          
          # Run validation script to ensure all required files are present
          chmod +x ./scripts/validate-package.sh
          if ! ./scripts/validate-package.sh; then
            echo "::error::Package validation failed"
            exit 1
          fi

      - name: Checkout typst/packages repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REGISTRY_REPO }}
          token: ${{ secrets.REGISTRY_TOKEN }}
          path: typst-packages

      - name: Release package
        run: |
          mkdir -p "typst-packages/${{ env.PATH_PREFIX }}/$PKG_NAME"
          mv "target/${PKG_NAME}/${PKG_VERSION}" "typst-packages/${{ env.PATH_PREFIX }}/${PKG_NAME}"
          rmdir "target/${PKG_NAME}"
          rmdir target

          GIT_USER_NAME="$(git log -1 --pretty=format:'%an')"
          GIT_USER_EMAIL="$(git log -1 --pretty=format:'%ae')"

          cd typst-packages
          git config user.name "${GIT_USER_NAME}"
          git config user.email "${GIT_USER_EMAIL}"
          git checkout -b "${PKG_NAME}-${PKG_VERSION}"
          git add .
          git commit -m "${PKG_NAME}:${PKG_VERSION}"
          git push --set-upstream origin "${PKG_NAME}-${PKG_VERSION}"
